{"version":3,"sources":["Header.js","ImphalEast.js","Bishnupur.js","Thoubal.js","ImphalWest.js","Chandel.js","DistrictList.js","PostForm.js","PutForm.js","DeleteForm.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","classes","AppBar","color","position","Toolbar","Typography","variant","className","stateName","Button","href","ImphalEast","console","log","imphalEastCities","Bishnupur","bishnupurCities","Thoubal","thoubalCities","ImphalWest","imphalWestCities","Chandel","chandelCities","getOptions","method","headers","Accept","DList","handleIEClick","e","preventDefault","document","querySelector","classList","toggle","handleBishClick","handleThouClick","handleIWClick","handleChanClick","state","onClick","this","fetch","then","imphalEastRes","json","newArr","i","length","push","City","setState","bishnupurRes","thoubalRes","imphalWestRes","chandelRes","Component","PostForm","handleSubmit","bind","city","getElementById","value","charAt","toUpperCase","slice","district","body","JSON","stringify","State","District","res","data","catch","err","onSubmit","htmlFor","id","name","type","PutForm","idUpdateInput","idToUpdate","updatedCity","DeleteForm","idInput","idToDelete","deletedCity","App","handleClick","handleAddClick","remove","handleUpdateClick","handleDeleteClick","handleImphalClick","handleNambolClick","handleSamurouClick","allDistricts","allCites","dlist","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.634bf797.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n//import { createMuiTheme } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n \nfunction Header(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar color=\"secondary\" position=\"static\">\n        <Toolbar>\n          \n          <Typography variant=\"h6\" className={classes.title}>Manipur: <small><em>districts and cities</em></small>\n            {props.stateName}\n          </Typography>\n          <Button color=\"inherit\">\n            <a className=\"home\" href=\"\">\n            Refresh\n            </a>\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;\n\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction ImphalEast(props) {\n  console.log(props.imphalEastCities);\n  return (\n    <div className=\"cityList\">\n      <div>{props.imphalEastCities[0]}</div>\n      <div>{props.imphalEastCities[1]}</div>\n      <div>{props.imphalEastCities[2]}</div>\n      <div>{props.imphalEastCities[3]}</div>\n      <div>{props.imphalEastCities[4]}</div>\n      <div>{props.imphalEastCities[5]}</div>\n      <div>{props.imphalEastCities[6]}</div>\n      <div>{props.imphalEastCities[7]}</div>\n      <div>{props.imphalEastCities[8]}</div>\n    </div>\n  );\n}\n\nexport default ImphalEast;\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction Bishnupur(props) {\n  console.log(props.bishnupurCities);\n  return (\n    <div className=\"cityList\">\n      <div>{props.bishnupurCities[0]}</div>\n      <div>{props.bishnupurCities[1]}</div>\n      <div>{props.bishnupurCities[2]}</div>\n      <div>{props.bishnupurCities[3]}</div>\n      <div>{props.bishnupurCities[4]}</div>\n      <div>{props.bishnupurCities[5]}</div>\n      <div>{props.bishnupurCities[6]}</div>\n      <div>{props.bishnupurCities[7]}</div>\n      <div>{props.bishnupurCities[8]}</div>\n    </div>\n  );\n}\n\nexport default Bishnupur;","import React from \"react\";\n//import { Button } from \"@material-ui/core\";\nimport \"./App.css\";\n\nfunction Thoubal(props) {\n  console.log(props.thoubalCities);\n  return (\n    <div className=\"cityList\">\n      <div>{props.thoubalCities[0]}</div>\n      <div>{props.thoubalCities[1]}</div>\n      <div>{props.thoubalCities[2]}</div>\n      <div>{props.thoubalCities[3]}</div>\n      <div>{props.thoubalCities[4]}</div>\n      <div>{props.thoubalCities[5]}</div>\n      <div>{props.thoubalCities[6]}</div>\n      <div>{props.thoubalCities[7]}</div>\n      <div>{props.thoubalCities[8]}</div>\n      <div>{props.thoubalCities[9]}</div>\n      <div>{props.thoubalCities[10]}</div>\n    </div>\n  );\n}\n\nexport default Thoubal;\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction ImphalWest(props) {\n  console.log(props.imphalWestCities);\n  return (\n    <div className=\"cityList\">\n      <div>{props.imphalWestCities[0]}</div>\n      <div>{props.imphalWestCities[1]}</div>\n      <div>{props.imphalWestCities[2]}</div>\n      <div>{props.imphalWestCities[3]}</div>\n      <div>{props.imphalWestCities[4]}</div>\n      <div>{props.imphalWestCities[5]}</div>\n      <div>{props.imphalWestCities[6]}</div>\n      <div>{props.imphalWestCities[7]}</div>\n      <div>{props.imphalWestCities[8]}</div>\n      <div>{props.imphalWestCities[9]}</div>\n    </div>\n  );\n}\n\nexport default ImphalWest","import React from \"react\";\nimport \"./App.css\";\n\nfunction Chandel(props) {\n  console.log(props.chandelCities);\n  return (\n    <div className=\"cityList\">\n      <div>{props.chandelCities[0]}</div>\n      <div>{props.chandelCities[1]}</div>\n      <div>{props.chandelCities[2]}</div>\n      <div>{props.chandelCities[3]}</div>\n    </div>\n  );\n}\n\nexport default Chandel;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ImphalEast from \"./ImphalEast\";\nimport Bishnupur from \"./Bishnupur\";\nimport Thoubal from \"./Thoubal\";\nimport ImphalWest from \"./ImphalWest\";\nimport Chandel from \"./Chandel\";\n\nconst imphalEastRes =\n  \"https://indian-cities-api.herokuapp.com/cities/search?District=Imphal%20East\";\nconst bishnupurRes =\n  \"https://indian-cities-api.herokuapp.com/cities/search?District=Bishnupur\";\nconst thoubalRes =\n  \"https://indian-cities-api.herokuapp.com/cities/search?District=Thoubal\";\nconst imphalWestRes =\n  \"https://indian-cities-api.herokuapp.com/cities/search?District=Imphal%20West\";\nconst chandelRes =\n  \"https://indian-cities-api.herokuapp.com/cities/search?District=Chandel\";\n\nconst getOptions = {\n  method: \"GET\",\n  headers: {\n    Accept: \"application/json\",\n  },\n};\n\nclass DList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stateName: \"\",\n      imphalEastCities: [],\n      bishnupurCities: [],\n      thoubalCities: [],\n      imphalWestCities: [],\n      chandelCities: [],\n    };\n  }\n  handleIEClick = (e) => {\n    console.log(\"hello\");\n    e.preventDefault();\n    let IEDiv = document.querySelector(\".IEDiv\");\n    IEDiv.classList.toggle(\"display\");\n  };\n  handleBishClick = (e) => {\n    console.log(\"hello\");\n    e.preventDefault();\n    let bishDiv = document.querySelector(\".bishDiv\");\n    bishDiv.classList.toggle(\"display\");\n  };\n  handleThouClick = (e) => {\n    console.log(\"hello\");\n    e.preventDefault();\n    let thouDiv = document.querySelector(\".thouDiv\");\n    thouDiv.classList.toggle(\"display\");\n  };\n  handleIWClick = (e) => {\n    console.log(\"hello\");\n    e.preventDefault();\n    let IWDiv = document.querySelector(\".IWDiv\");\n    IWDiv.classList.toggle(\"display\");\n  };\n  handleChanClick = (e) => {\n    console.log(\"hello\");\n    e.preventDefault();\n    let chanDiv = document.querySelector(\".chanDiv\");\n    chanDiv.classList.toggle(\"display\");\n  };\n  render() {\n    return (\n      <div className=\"districtBody\">\n        <div>\n          <button className=\"dButton\" onClick={this.handleIEClick}>Imphal East</button>\n          <div className=\"IEDiv\">\n            <p className=\"citiesWord\" >\n              Cities:\n            </p>\n            <ImphalEast imphalEastCities={this.state.imphalEastCities} />\n          </div>\n        </div>\n        <div>\n          <button className=\"dButton\" onClick={this.handleBishClick}>Bishnupur</button>\n          <div className=\"bishDiv\">\n            <p className=\"citiesWord\">\n              Cities:\n            </p>\n            <Bishnupur bishnupurCities={this.state.bishnupurCities} />\n          </div>\n        </div>\n        <div>\n          <button className=\"dButton\" onClick={this.handleThouClick}>Thoubal</button>\n          <div className=\"thouDiv\">\n            <p className=\"citiesWord\">\n              Cities:\n            </p>\n            <Thoubal thoubalCities={this.state.thoubalCities} />\n          </div>\n        </div>\n        <div>\n          <button className=\"dButton\" onClick={this.handleIWClick}>Imphal West</button>\n          <div className=\"IWDiv\">\n            <p className=\"citiesWord\">\n              Cities:\n            </p>\n            <ImphalWest imphalWestCities={this.state.imphalWestCities} />\n          </div>\n        </div>\n        <div>\n          <button className=\"dButton\" onClick={this.handleChanClick}>Chandel</button>\n          <div className=\"chanDiv\">\n            <p className=\"citiesWord\">\n              Cities:\n            </p>\n            <Chandel chandelCities={this.state.chandelCities} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  componentDidMount() {\n    fetch(imphalEastRes, getOptions)\n      .then((imphalEastRes) => {\n        return imphalEastRes.json();\n      })\n      .then((imphalEastRes) => {\n        let newArr = [];\n        for (let i = 0; i < imphalEastRes.length; i++) {\n          newArr.push(imphalEastRes[i].City);\n        }\n        this.setState({\n          imphalEastCities: newArr,\n        });\n      });\n    fetch(bishnupurRes, getOptions)\n      .then((bishnupurRes) => {\n        return bishnupurRes.json();\n      })\n      .then((bishnupurRes) => {\n        let newArr = [];\n        for (let i = 0; i < bishnupurRes.length; i++) {\n          newArr.push(bishnupurRes[i].City);\n        }\n        console.log(bishnupurRes);\n        this.setState({\n          bishnupurCities: newArr,\n        });\n      });\n    fetch(thoubalRes, getOptions)\n      .then((thoubalRes) => {\n        return thoubalRes.json();\n      })\n      .then((thoubalRes) => {\n        let newArr = [];\n        for (let i = 0; i < thoubalRes.length; i++) {\n          newArr.push(thoubalRes[i].City);\n        }\n        this.setState({\n          thoubalCities: newArr,\n        });\n      });\n    fetch(imphalWestRes, getOptions)\n      .then((imphalWestRes) => {\n        return imphalWestRes.json();\n      })\n      .then((imphalWestRes) => {\n        let newArr = [];\n        for (let i = 0; i < imphalWestRes.length; i++) {\n          newArr.push(imphalWestRes[i].City);\n        }\n        this.setState({\n          imphalWestCities: newArr,\n        });\n      });\n    fetch(chandelRes, getOptions)\n      .then((chandelRes) => {\n        return chandelRes.json();\n      })\n      .then((chandelRes) => {\n        let newArr = [];\n        for (let i = 0; i < chandelRes.length; i++) {\n          newArr.push(chandelRes[i].City);\n        }\n        this.setState({\n          chandelCities: newArr,\n        });\n      });\n  }\n}\n\nexport default DList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n//import { Formik, Form, Field, ErrorMessage } from \"formik\";\n\n\nconst res = \"https://indian-cities-api.herokuapp.com/cities\";\n\nclass PostForm extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"help im posting\");\n    let city =\n      document.getElementById(\"city\").value.charAt(0).toUpperCase() +\n      document.getElementById(\"city\").value.slice(1);\n    let state =\n      document.getElementById(\"state\").value.charAt(0).toUpperCase() +\n      document.getElementById(\"state\").value.slice(1);\n    let district =\n      document.getElementById(\"district\").value.charAt(0).toUpperCase() +\n      document.getElementById(\"district\").value.slice(1);\n    console.log(city);\n    //let data = new FormData(e.target);\n    fetch(res, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        City: city,\n        State: state,\n        District: district,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data))\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <div className=\"formLine\">\n          <label htmlFor=\"City\">Enter City</label>\n          <input id=\"city\" name=\"City\" type=\"text\" />\n        </div>\n        <div className=\"formLine\">\n          <label htmlFor=\"State\">Enter State</label>\n          <input id=\"state\" name=\"State\" type=\"text\" />\n        </div>\n        <div className=\"formLine\">\n          <label htmlFor=\"District\">Enter District</label>\n          <input id=\"district\" name=\"District\" type=\"text\" />\n        </div>\n\n        <button className=\"dButton\">Add City</button>\n      </form>\n    );\n  }\n}\n\nexport default PostForm;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass PutForm extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"yikes im updating\");\n    let idUpdateInput = document.getElementById(\"idUpdateInput\").value;\n    JSON.stringify(idUpdateInput);\n    let idToUpdate = idUpdateInput;\n    console.log(idToUpdate);\n\n    let city =\n      document.getElementById(\"cityUpdate\").value.charAt(0).toUpperCase() +\n      document.getElementById(\"cityUpdate\").value.slice(1);\n    let state =\n      document.getElementById(\"stateUpdate\").value.charAt(0).toUpperCase() +\n      document.getElementById(\"stateUpdate\").value.slice(1);\n    let district =\n      document.getElementById(\"districtUpdate\").value.charAt(0).toUpperCase() +\n      document.getElementById(\"districtUpdate\").value.slice(1);\n    let res = `https://indian-cities-api.herokuapp.com/cities/${idToUpdate}`;\n    fetch(res, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        City: city,\n        State: state,\n        District: district,\n      }),\n    })\n      .then((res) => res.json())\n      .then((updatedCity) => console.log(updatedCity))\n      .catch((err) => console.log(err));\n  }\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <div className=\"formLine\">\n          <label htmlFor=\"id\">Enter City id</label>\n          <input id=\"idUpdateInput\" name=\"id\" type=\"text\" />\n        </div>\n        <div className=\"formLine\">\n          <label htmlFor=\"City\">Enter City</label>\n          <input id=\"cityUpdate\" name=\"City\" type=\"text\" />\n        </div>\n        <div className=\"formLine\">\n          <label htmlFor=\"State\">Enter State</label>\n          <input id=\"stateUpdate\" name=\"State\" type=\"text\" />\n        </div>\n        <div className=\"formLine\">\n          <label htmlFor=\"District\">Enter District</label>\n          <input id=\"districtUpdate\" name=\"District\" type=\"text\" />\n        </div>\n        <button className=\"dButton\">Update City by ID</button>\n      </form>\n    );\n  }\n}\n\nexport default PutForm;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass DeleteForm extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"oh no I'm deleting\");\n    let idInput = document.getElementById(\"idInput\").value;\n    JSON.stringify(idInput);\n    let idToDelete = idInput;\n    console.log(idToDelete);\n\n    let res = `https://coders-cookout.herokuapp.com/recipes${idToDelete}`;\n\n    fetch(res, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then((deletedCity) => console.log(deletedCity))\n      .catch((err) => console.log(err));\n  }\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <div className=\"formLine\">\n          <label htmlFor=\"idInput\">Enter City ID</label>\n          <input id=\"idInput\" name=\"idInput\" type=\"text\" />\n        </div>\n        <button className=\"dButton\">Delete</button>\n      </form>\n    );\n  }\n}\n\nexport default DeleteForm;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport DList from \"./DistrictList\";\nimport { Button } from \"@material-ui/core\";\nimport PostForm from \"./PostForm\";\nimport PutForm from \"./PutForm\";\nimport DeleteForm from \"./DeleteForm\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stateName: \"\",\n      allDistricts: [],\n      allCites: [],\n    };\n  }\n  handleClick = (e) => {\n    console.log(\"hello\");\n    e.preventDefault();\n    let districtDiv = document.querySelector(\".districtDiv\");\n    districtDiv.classList.toggle(\"display\");\n  };\n  handleAddClick = (e) => {\n    console.log(\"add\");\n    e.preventDefault();\n    let addDiv = document.querySelector(\".addDiv\");\n    addDiv.classList.toggle(\"display\");\n    let updateDiv = document.querySelector(\".updateDiv\");\n    updateDiv.classList.remove(\"display\");\n    let deleteDiv = document.querySelector(\".deleteDiv\");\n    deleteDiv.classList.remove(\"display\");\n  };\n  handleUpdateClick = (e) => {\n    console.log(\"update\");\n    e.preventDefault();\n    let updateDiv = document.querySelector(\".updateDiv\");\n    updateDiv.classList.toggle(\"display\");\n    let deleteDiv = document.querySelector(\".deleteDiv\");\n    deleteDiv.classList.remove(\"display\");\n    let addDiv = document.querySelector(\".addDiv\");\n    addDiv.classList.remove(\"display\");\n  };\n  handleDeleteClick = (e) => {\n    console.log(\"delete\");\n    e.preventDefault();\n    let deleteDiv = document.querySelector(\".deleteDiv\");\n    deleteDiv.classList.toggle(\"display\");\n    let addDiv = document.querySelector(\".addDiv\");\n    addDiv.classList.remove(\"display\");\n    let updateDiv = document.querySelector(\".updateDiv\");\n    updateDiv.classList.remove(\"display\");\n  };\n  handleImphalClick = (e) => {\n    e.preventDefault();\n    let imphalTopDiv = document.querySelector(\".imphalTopDiv\");\n    imphalTopDiv.classList.toggle(\"display\");\n    let nambolTopDiv = document.querySelector(\".nambolTopDiv\");\n    nambolTopDiv.classList.remove(\"display\");\n    let samurouTopDiv = document.querySelector(\".samurouTopDiv\");\n    samurouTopDiv.classList.remove(\"display\");\n  };\n  handleNambolClick = (e) => {\n    e.preventDefault();\n    let imphalTopDiv = document.querySelector(\".imphalTopDiv\");\n    imphalTopDiv.classList.remove(\"display\");\n    let nambolTopDiv = document.querySelector(\".nambolTopDiv\");\n    nambolTopDiv.classList.toggle(\"display\");\n    let samurouTopDiv = document.querySelector(\".samurouTopDiv\");\n    samurouTopDiv.classList.remove(\"display\");\n  };\n  handleSamurouClick = (e) => {\n    e.preventDefault();\n    let imphalTopDiv = document.querySelector(\".imphalTopDiv\");\n    imphalTopDiv.classList.remove(\"display\");\n    let nambolTopDiv = document.querySelector(\".nambolTopDiv\");\n    nambolTopDiv.classList.remove(\"display\");\n    let samurouTopDiv = document.querySelector(\".samurouTopDiv\");\n    samurouTopDiv.classList.toggle(\"display\");\n  };\n\n  render() {\n    return (\n      <div className=\"bodyDiv\">\n          <div className=\"app\">\n        <div className=\"top\">\n          <Header />\n        </div>\n        <div className=\"majorCities\">\n          <Button\n            onClick={this.handleImphalClick}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Imphal\n          </Button>\n          <Button\n            onClick={this.handleNambolClick}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Nambol\n          </Button>\n          <Button\n            onClick={this.handleSamurouClick}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Samurou\n          </Button>\n        </div>\n        <div className=\"imphalTopDiv\">\n          <div className=\"imphalPic\"></div>\n          <div className=\"imphalDes\">Imphal is the capital city of Manipur. It spans both the Imphal East and West districts. It is most famous for it's metropolitan centre which contains the ruins of Kangla Palace, the royal seat of the former Kingdom of Manipur. It's population was 268,243 according to a 2011 census.</div>\n        </div>\n        <div className=\"nambolTopDiv\">\n          <div className=\"nambolPic\"></div>\n          <div className=\"nambolDes\">The town of Nambol overlaps the Bishnupur and Imphal West districts. It is known as an educational hub and it's market called the Nambol Bazaar is one of the busiest markets in Manipur. In 2001 a census showed a population of 18,117.</div>\n        </div>\n        <div className=\"samurouTopDiv\">\n          <div className=\"samurouPic\"></div>\n          <div className=\"samurouDes\">Samurou city limits reach into both the Thoubal and Imphal West districts. Notable spots include two temples for the diety of Ibudhou Pakhangba, Awang Leikai and Makha Leikai. It is also the birthplace of the Manipuri poet Hijam Angahal. As of 2001 it's population was 14,232.</div>\n        </div>\n        \n          <div className=\"districtBtn\">\n            <button className=\"actualDistrictBtn\" onClick={this.handleClick}>\n              Districts\n            </button>\n            <div className=\"districtDiv\">\n              <DList dlist={this.state.allDistricts} />\n            </div>\n          </div>\n          <div className=\"accessDiv\"><p>Access to Anthony Maddox's Indian City Database:</p></div>\n          <div className=\"crudDiv\">\n            <div className=\"formDiv\">\n              <button className=\"addBtn\" onClick={this.handleAddClick}>\n                Add City\n              </button>\n            </div>\n            <div>\n              <button className=\"addBtn\" onClick={this.handleUpdateClick}>\n                Update City by ID\n              </button>\n            </div>\n            <div>\n              <button className=\"addBtn\" onClick={this.handleDeleteClick}>\n                Delete City by ID\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"addDiv\">\n            <PostForm />\n          </div>\n          <div className=\"updateDiv\">\n            <PutForm />\n          </div>\n          <div className=\"deleteDiv\">\n            <DeleteForm />\n          </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}